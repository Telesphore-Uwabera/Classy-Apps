#!/bin/bash

echo "ðŸ”¥ Updating Firebase configurations for all apps..."

# Firebase project details
PROJECT_ID="classyapp-unified-backend"
PROJECT_NUMBER="156854442550"
STORAGE_BUCKET="classyapp-unified-backend.appspot.com"

echo "ðŸ“± Updating Customer App Firebase config..."

# Update Customer App firebase_options.dart
cat > Apps/Customer/Frontend/lib/firebase_options.dart << 'EOF'
// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'YOUR_WEB_API_KEY',
    appId: '1:156854442550:web:YOUR_WEB_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    authDomain: 'classyapp-unified-backend.firebaseapp.com',
    databaseURL: 'https://classyapp-unified-backend.firebaseio.com',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    measurementId: 'YOUR_MEASUREMENT_ID',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'YOUR_ANDROID_API_KEY',
    appId: '1:156854442550:android:YOUR_ANDROID_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY',
    appId: '1:156854442550:ios:YOUR_IOS_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    iosBundleId: 'online.edentech.Classy',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY',
    appId: '1:156854442550:ios:YOUR_IOS_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    iosBundleId: 'online.edentech.Classy',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'YOUR_WEB_API_KEY',
    appId: '1:156854442550:web:YOUR_WEB_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    authDomain: 'classyapp-unified-backend.firebaseapp.com',
    storageBucket: 'classyapp-unified-backend.appspot.com',
  );
}
EOF

echo "ðŸ“± Updating Vendor App Firebase config..."

# Update Vendor App firebase_options.dart
cat > Apps/Vendor/Frontend/lib/firebase_options.dart << 'EOF'
// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'YOUR_WEB_API_KEY',
    appId: '1:156854442550:web:YOUR_WEB_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    authDomain: 'classyapp-unified-backend.firebaseapp.com',
    databaseURL: 'https://classyapp-unified-backend.firebaseio.com',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    measurementId: 'YOUR_MEASUREMENT_ID',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'YOUR_ANDROID_API_KEY',
    appId: '1:156854442550:android:YOUR_ANDROID_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY',
    appId: '1:156854442550:ios:YOUR_IOS_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    iosBundleId: 'com.classy.vendor',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY',
    appId: '1:156854442550:ios:YOUR_IOS_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    iosBundleId: 'com.classy.vendor',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'YOUR_WEB_API_KEY',
    appId: '1:156854442550:web:YOUR_WEB_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    authDomain: 'classyapp-unified-backend.firebaseapp.com',
    storageBucket: 'classyapp-unified-backend.appspot.com',
  );
}
EOF

echo "ðŸ“± Updating Driver App Firebase config..."

# Update Driver App firebase_options.dart
cat > Apps/Driver/Frontend/lib/firebase_options.dart << 'EOF'
// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'YOUR_WEB_API_KEY',
    appId: '1:156854442550:web:YOUR_WEB_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    authDomain: 'classyapp-unified-backend.firebaseapp.com',
    databaseURL: 'https://classyapp-unified-backend.firebaseio.com',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    measurementId: 'YOUR_MEASUREMENT_ID',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'YOUR_ANDROID_API_KEY',
    appId: '1:156854442550:android:YOUR_ANDROID_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY',
    appId: '1:156854442550:ios:YOUR_IOS_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    iosBundleId: 'com.classy.driver',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY',
    appId: '1:156854442550:ios:YOUR_IOS_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    storageBucket: 'classyapp-unified-backend.appspot.com',
    iosBundleId: 'com.classy.driver',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'YOUR_WEB_API_KEY',
    appId: '1:156854442550:web:YOUR_WEB_APP_ID',
    messagingSenderId: '156854442550',
    projectId: 'classyapp-unified-backend',
    authDomain: 'classyapp-unified-backend.firebaseapp.com',
    storageBucket: 'classyapp-unified-backend.appspot.com',
  );
}
EOF

echo "âœ… Firebase configuration files updated!"
echo ""
echo "ðŸ”§ Next steps:"
echo "   1. Go to Firebase Console: https://console.firebase.google.com"
echo "   2. Select project: classyapp-unified-backend"
echo "   3. Add your Flutter apps to the project"
echo "   4. Download real configuration files"
echo "   5. Replace placeholder values in firebase_options.dart files"
echo ""
echo "ðŸ“± Apps to configure:"
echo "   - Customer App (online.edentech.Classy)"
echo "   - Vendor App (com.classy.vendor)"
echo "   - Driver App (com.classy.driver)"
echo "   - Admin Panel (Web app)"
